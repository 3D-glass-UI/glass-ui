/* ================================== */
/* Inputs */
@use "../0-base/breakpoint" as bp;
@use "../0-base/color";
@use "../0-base/size";
@use "../0-base/text";
@use "../1-layout/layout-help" as help;
@use "../2-visual/animation" as ani;
@use "../2-visual/border" as br;
@use "../2-visual/fill";
@use "../2-visual/inset" as in;
/* ================================== */

.text-input {
  pointer-events: auto;
  cursor: text;
  width: min(300px, 100%);
  height: var(--ui-lg);
  border-radius: br.$round;
  margin-top: size.$s2;
  padding: 0 size.$s4;

  @include text.body-text;
  font-size: var(--text-sm);
  color: white;

  box-shadow:   
    inset  0     -0.8px 0 rgba(color.$light, 0.2), // bottom highlight
    inset -0.8px -1.2px 0 rgba(color.$light, 0.25), // bottom-right bevel
    inset 0 3px 6px rgba(color.$dark, 0.1), // L around
    inset 2px 1.25px 3px rgba(color.$dark, 0.1), // med top left
    inset 1px 1px 1px rgba(color.$dark, 0.1); // small around

  @include fill.fill-xdark;
}


input[type="checkbox"] {
  appearance: none;
  background-color: color.$tint-xdark;
  margin: 0;
  box-shadow: in.$inset-xs;
  width: 1.15em;
  height: 1.15em;
  border-radius: 0.15em;
  // transform: translateY(-0.075em);
  display: grid;
  place-content: center;
}

input[type="checkbox"]::before {
  content: "";
  width: 0.7em;
  height: 0.7em;
  transform: scale(0);
  transition: transform ani.$speed-fast ease-in-out;
  background-color: color.$color-prim;
  border-radius: 0.1em;
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}

input[type="checkbox"]:disabled {
  color: color.$disabled;
  background-color: color.$disabled;
  box-shadow: in.$inset-sha-xs;
  cursor: not-allowed;
}


// .checkbox {
//   background-color: color.$dark;
// }

.checkbox__label {
  font-weight: text.$font-weight-md;
  display: grid;
  grid-template-columns: 1.15em auto;
  align-items: center;
  gap: 0.25em;
}

.checkboxes {
  display: grid;
  gap: 0.5rem;
}