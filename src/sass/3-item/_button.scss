/* ================================== */
/* Buttons */
@use "../0-base/breakpoint" as bp;
@use "../0-base/color";
@use "../0-base/size";
@use "../0-base/text";
@use "../1-layout/flex";
@use "../1-layout/z-index" as z;
@use "../1-layout/layout-help" as help;
@use "../2-visual/animation" as ani;
@use "../2-visual/border" as br;
@use "../2-visual/bevel";
@use "../2-visual/fill";
@use "../2-visual/inset" as in;
@use "../2-visual/shadow" as sha;
/* ================================== */

/* ================================== */
//* Button size & layout */
/* ================================== */

/* Base → Button text */
@mixin btn-text {
  font-family: text.$font-family-title;
  font-weight: text.$font-weight-sm;
  letter-spacing: text.$letter-spacing-md;
  text-align: center;
  z-index: z.z(on-btn);
  text-shadow: sha.$text-sha-sm;
}

/* Base → Button layout */
@mixin btn-base {
  width: fit-content;
  @include flex.flex-c;
  @include btn-text;
  border-radius: br.$round;
  z-index: z.z(btn);

  & img {
    width: auto;
    align-self: center;
    z-index: z.z(on-btn);
  }
}

/* Button sizes */
/* ================================== */
@mixin btn-sm {
  /* config */
  $inner-h: 0.8em; // ← set font size/line height/icon height here
  $p-t: 1px; // ← padding-top diff for every font
  $p-b: 0;
  $p-x: 0.85em;
  $p-x-icon: 0.7em;
  
  &.btn-icon {
    gap: 0.25em;
    padding: $p-t $p-x-icon $p-b $p-x-icon;
  }

  /* layout */
  @include btn-base;
  height: var(--ui-sm); 
  font-size: $inner-h;
  line-height: $inner-h;
  padding: $p-t $p-x $p-b $p-x;

  & img {
    height: calc(1.1 * $inner-h);
    margin-top: calc(-1 * $p-t);
  }
}

@mixin btn-md {
  /* config */
  $inner-h: 0.9em; // ← set font size/line height/icon height here
  $p-t: 1px; // ← padding-top diff for every font
  $p-b: 0;
  $p-x: 1em;
  $p-x-icon: 0.75em;
  
  &.btn-icon {
    gap: 0.3em;
    padding: $p-t $p-x-icon $p-b $p-x-icon;
  }

  /* layout */
  @include btn-base;
  height: var(--ui-md); 
  font-size: $inner-h;
  line-height: $inner-h;
  padding: $p-t $p-x $p-b $p-x;

  & img {
    height: calc(1.1 * $inner-h);
    margin-top: calc(-1 * $p-t);
  }
}

@mixin btn-lg {
  /* config */
  $inner-h: 1em; // ← set font size/line height/icon height here
  $p-t: 1px; // ← padding-top diff for every font
  $p-b: 0;
  $p-x: 1.4em;
  $p-x-icon: 1em;
  
  &.btn-icon {
    gap: 0.4em;
    padding: $p-t $p-x-icon $p-b $p-x-icon;
  }

  /* layout */
  @include btn-base;
  height: var(--ui-lg); 
  font-size: $inner-h;
  line-height: $inner-h;
  padding: $p-t $p-x $p-b $p-x;

  & img {
    height: calc(1.1 * $inner-h);
    margin-top: calc(-1 * $p-t);
  }
}

.btn-sm {
  @include btn-sm;
}

.btn-md {
  @include btn-md;
}

.btn-lg {
  @include btn-lg;
}

//* Round icon buttons */
/* ================================== */

/* Base → round button */
@mixin round-btn-base {
  @include flex.flex-c;
  border-radius: br.$round;
  z-index: z.z(btn);

  & img {
    width: auto;
    align-self: center;
    z-index: z.z(on-btn);
  }
}

@mixin round-btn-sm {
  @include round-btn-base;
  width: var(--ui-sm); 
  height: var(--ui-sm); 

  & img {
    height: calc(var(--ui-sm) * 0.65); 
  }
}

@mixin round-btn-md {
  @include round-btn-base;
  width: var(--ui-md); 
  height: var(--ui-md); 

  & img {
    height: calc(var(--ui-md) * 0.65); 
  }
}

@mixin round-btn-lg {
  @include round-btn-base;
  width: var(--ui-lg); 
  height: var(--ui-lg); 

  & img {
    height: calc(var(--ui-lg) * 0.6); 
  }
}

.round-btn-sm {
  @include round-btn-sm;
}

.round-btn-md {
  @include round-btn-md;
}

.round-btn-lg {
  @include round-btn-lg;
}

/* ================================== */
//* Button state & visual styling */
/* ================================== */

@mixin ui-transitions {
  transition: 
    background-color ani.$speed-xslow ease-out,
    box-shadow ani.$speed-xslow ease-out;

  &:hover {    
    transition: 
      background-color ani.$speed-fast ease-in,
      box-shadow ani.$speed-fast ease-in,
  }

  &:active {
    transition: 
      background-color ani.$speed-reg ease-in-out,
      box-shadow ani.$speed-reg ease-in-out,
  }
}


/* Base → 3D button glass material */
@mixin btn-glass-base {
  position: relative;
  box-shadow: sha.$sha-xs;
  @include fill.glass-filter;
  color: var(--btn-text-rest);
  @include ui-transitions;

  &::after {
    @include help.pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-sm;
  }

  &::before {
    @include help.pseudo;
    z-index: -2;
    @include fill.noise-sm;
    opacity: 70%;
  }

  &:hover {
    box-shadow: sha.$sha-sm;
  }

  &:active {
    box-shadow:  sha.$sha-2xs;
  }
}

@mixin btn-glass-clear {
  @include btn-glass-base;
  background-color: var(--tint-clear);

  &:hover {
    background-color: var(--tint-xlight);
  }

  &:active {
    background-color: var(--tint-dark);
  }
}

/* Light → 3D button glass */
@mixin btn-glass-light {
  @include btn-glass-base;
  background-color: var(--tint-xlight);
  text-shadow: sha.$text-sha-md;

  &:hover {
    background-color: var(--tint-2xlight);
  }

  &:active {
    background-color: var(--tint-dark);
  }
}

/* Dark → 3D button glass */
@mixin btn-glass-dark {
  @include btn-glass-base;
  background-color: var(--tint-xdark);
    
  &:hover {
    background-color: var(--tint-2xdark);
  }

  &:active {
    background-color: var(--tint-3xdark);
  }
}

.btn-glass-clear {
  @include btn-glass-clear;
}

.btn-glass-light {
  @include btn-glass-light;
}

.btn-glass-dark {
  @include btn-glass-dark;
}

/* 2D clear button */
/* ================================== */
@mixin btn-2d-base {
  background-color: transparent;
  color: var(--btn-text-rest);
  box-shadow: none;
  @include ui-transitions;

  &:hover {
    background-color: var(--tint-xlight);
    box-shadow: sha.$sha-xs;
  }

  &:active {
    background-color: var(--tint-dark);
    box-shadow:  sha.$sha-2xs;
  }
}

.btn-clear {
  @include btn-2d-base;
}