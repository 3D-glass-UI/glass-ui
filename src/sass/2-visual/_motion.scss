/* ================================== */
/* Motion */
@use "../0-base" as *;
@use "border" as bor;
/* ================================== */


/* lighten hover effect */
/* ================================== */

// @media (hover: hover) {
.card-hover-effect {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  background: transparent;
}

// .card-hover-effect > * {
//   pointer-events: none;
// }

.card-hover-effect::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  left: var(--x);
  top: 0;
  bottom: 0;
  pointer-events: none;
  border-radius: inherit;
  background: linear-gradient(
    to right,
    transparent,
    rgba($highlight-color, 0.5) 50%,
    transparent
  );

  opacity: 0.1;
  // transition: opacity 200ms ease-in-out, translateX 200ms ease-in-out;
  transition: opacity 200ms, translate 50ms;
  transform: translate(-50%, 0%);
}


.card-hover-effect:hover::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  left: var(--x);
  top: 0;
  bottom: 0;
  pointer-events: none;
  border-radius: inherit;
  background: linear-gradient(
    to right,
    transparent,
    rgba($highlight-color, 0.5) 50%,
    rgba($shadow-color, 0.5) 51%,
    rgba($highlight-color, 0.5) 52%,
    transparent
  );

  opacity: 1;


  // transition: opacity 500ms, translateX 50ms;
}





.glass-morphism-container-hover-effect{
  position: relative;

  background-clip: padding-box;
  border-radius: bor.$radius-m; // match border radius to parent!
  overflow: hidden;
  cursor: pointer;
  pointer-events: auto;

  @include breakpoint(m) {
    border-radius: bor.$radius-l;
  }
}

.glass-morphism-container-hover-effect::before{
  z-index: -1;
  --size: 0;
    content: '';
    position: absolute;
    border-radius: inherit;
    left: var(--x);
    top: var(--y);
    width: var(--size);
    height: var(--size);
    background: radial-gradient(circle closest-side, rgba($highlight-color,0.9), transparent);
    opacity: 0;
    transform: translate(-50%, -50%);
    transition: 
    width 200ms ease, 
    height 200ms ease, 
    opacity 200ms ease, 
    translate 50ms ease;
}

.glass-morphism-container-hover-effect:hover::before{
  --size: 500px;
  opacity: 1;
}




// .glass-morphism-container-hover-effect{
//   position:relative;
//   background-color: rgba(255, 255, 255,0.1);
//   padding: 60px;
//   color:#008eb5;
//   border-radius: 25px;
//   border: solid 2px transparent;
//    background-clip: padding-box;
//   box-shadow: 10px 10px 10px  rgba(46, 54, 68, 0.03);
//   backdrop-filter: blur(50px);
//   overflow:hidden;
//   cursor: pointer;
// }

// .glass-morphism-container-hover-effect::before{
//   --size: 0;
//     content: '';
//     position: absolute;
//     left: var(--x);
//     top: var(--y);
//     width: var(--size);
//     height: var(--size);
//     background: radial-gradient(circle closest-side, rgba(255, 255, 255,0.2), transparent);
//     transform: translate(-50%, -50%);
//     transition: width .2s ease, height .2s ease;
// }

// .glass-morphism-container-hover-effect:hover::before{
//   --size: 400px;
// }