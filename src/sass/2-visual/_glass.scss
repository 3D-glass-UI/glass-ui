/* ================================== */
/* Glass */
@use "../0-base/color" as *;
@use "../0-base/breakpoint" as bp;
@use "../1-layout/help" as *;
@use "../1-layout/z-index" as z;
@use "animation" as ani;
@use "bevel";
@use "fill";
@use "shadow" as sha;

/* ================================== */


.bg-glass-light {
  position: relative;
  overflow: hidden;

  &::after {
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-md;
    @include fill.noise;
    @include fill.glass-fill-light;
  }
}

@mixin bg-glass-reg {
  position: relative;
  // overflow: hidden;

  &::after {
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-md;
    @include fill.noise;
    @include fill.glass-fill-reg;
  }
}

.bg-glass-reg {
  @include bg-glass-reg;
}

.bg-glass-dark {
  position: relative;
  overflow: hidden;

  &::after {
    @include pseudo;
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-md;
    @include fill.noise;
    @include fill.glass-fill-dark;
  }
}

.bg-glass-xdark {
  position: relative;
  overflow: hidden;

  &::after {
    @include pseudo;
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-md;
    @include fill.noise;
    @include fill.glass-fill-xdark;
  }
}



.demo-glass-reg {
  position: relative;
  overflow: hidden;

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    overflow: hidden;
    z-index: -1;
    box-shadow: inset 1px 1px 0.4px rgba(250, 254, 255, 0.1), inset 2px 2px 1px -2.4px rgba(250, 254, 255, 0.8), inset -2px -2px 0.4px -2.4px rgba(250, 254, 255, 0.1), inset 0 -0.5px 1px -1px rgba(250, 254, 255, 0.5);
    background-image: url(/assets/textures/noise-texture-white-100den-10op-500x500.png), url(/assets/textures/noise-texture-black-100den-10op-500x500.png);
    background-size: 100px;
    background-repeat: repeat;
    background-color: rgba(0, 3, 10, 0.1);
    -webkit-backdrop-filter: blur(var(--blur)) brightness(0.92) saturate(1.3);
    backdrop-filter: blur(var(--blur)) brightness(0.92) saturate(1.3);
  }
}


.bg-glass-dark-no-bevel {
  position: relative;
  overflow: hidden;
  @include fill.noise;

  &::after {
    @include pseudo;
    z-index: -1;

    box-shadow: bevel.$bevel-sm;
    @include fill.noise-dark;
    @include fill.glass-fill-dark;

    @include bp.bp(md) {
      box-shadow: bevel.$bevel-md;
    }
  }
}

.btn2-glass {
  position: relative;
  overflow: hidden;
  box-shadow: sha.$sha-xs;
  background-color: transparent;
  transition: background-color ani.$speed-slow ease-out;

  &::after {
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel-sm;
    @include fill.noise-sm;
    @include fill.glass-fill-dark;
  }

  &:hover {
    background-color: $btn1-hover;
  }

  &:active {
    background-color: $btn1-active;
  }
}

//Primary btn glass
.btn1-glass {
  position: relative;
  overflow: hidden;
  box-shadow: sha.$sha-xs;
  transition: background-color ani.$speed-slow ease-out;

  &::after {
    @include pseudo;
    z-index: -1;

    background-color: $btn1-rest;
    box-shadow: bevel.$bevel-sm;
    @include fill.noise-dark-sm;
    @include fill.glass-filter-reg;
  }
 
  &:hover {
    background-color: $btn1-hover;
  }

  &:active {
    background-color: $btn1-active;
  }
}

//Secondary btn glass
// .btn2-glass {
//   position: relative;
//   overflow: hidden;
//   box-shadow: sha.$sha-2xs;
//   transition: background-color ani.$speed-slow ease-out;

//   &::after {
//     @include pseudo;
//     z-index: -1;

//     background-color: $btn2-rest;
//     box-shadow: bevel.$bevel-sm;
//     @include fill.noise-dark-sm;
//     @include fill.glass-filter-reg;
//   }

//   &:hover {
//     background-color: $btn2-hover;
//   }

//   &:active {
//     background-color: $btn2-active;
//   }
// }



// @mixin bg-glass {
//   position: relative;
//   overflow: hidden;
  
//   ::after {
//     @include pseudo;
//     z-index: -1;
//     @include fill.noise;
//   }
// }

// .bg-glass {
//   @include bg-glass;
// }