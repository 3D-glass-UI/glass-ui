/* ================================== */
/* Inset */
@use "../0-base/color";
@use "../1-layout/layout-help" as help;
@use "../1-layout/z-index" as z;
@use "fill";
@use "glass";
@use "shadow" as sha;
/* ================================== */
/* Insets have both light and dark box-shadows to create a 3D effect */

$inset-xs: 
  inset -0.3px -0.3px 0 rgba(color.$light, 0.05),      // bottom-right bevel
  inset -0.2px -0.2px 0.2px rgba(color.$light, 0.05),      // bottom-right bevel blur
  inset -0.3px -0.3px 0.3px -0.3px rgba(color.$light, 0.15),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.05),  // bottom-right specular

  inset 0.25px 0.5px 1px rgba(color.$dark, 0.1),    // lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.25), // med top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // small top-left shadow

$inset-sm: 
  inset -0.5px -0.5px 0 rgba(color.$light, 0.05),  // bottom-right bevel
  inset -0.8px -0.8px 0.25px -0.25px rgba(color.$light, 0.08),       // bottom-right bevel blur
  inset -0.3px -0.3px 0.4px -0.3px rgba(color.$light, 0.2),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.08),  // bottom-right specular

  inset 0.5px 1px 2px rgba(color.$dark, 0.1),    // lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.25), // med top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // small top-left shadow


$inset-md: 
  inset -1px -1px 0 -0.25px rgba(color.$light, 0.05),      // bottom-right bevel
  inset -0.5px -0.5px 0.2px  rgba(color.$light, 0.08),  // bottom-right bevel blur
  inset -0.3px -0.3px 0.8px -0.3px rgba(color.$light, 0.15),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.01),  // bottom-right specular

  inset 1px 2px 4px rgba(color.$dark, 0.1), // xl top-left shadow
  inset 0.5px 1px 2px rgba(color.$dark, 0.1),    // lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.25), // md top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // sm top-left shadow


$inset-lg: 
  inset -1px -1px 0 rgba(color.$light, 0.05), // bottom highlight
  inset -0.8px -0.8px 0.25px rgba(color.$light, 0.08), // bottom-right wrap bevel
  inset -0.3px -0.3px 0.8px -0.3px rgba(color.$light, 0.2),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.08),  // bottom-right specular
  
  inset 2px 4px 8px rgba(color.$dark, 0.1), // xl top-left shadow
  inset 1px 2px 4px rgba(color.$dark, 0.1), // lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.25), // md top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // sm top-left shadow


$inset-xl: 
  inset -1.25px -1.25px 0 rgba(color.$light, 0.05), // bottom highlight/
  inset -1px    -1px 0.25px rgba(color.$light, 0.08),  // bottom-right bevel blur
  inset -0.3px -0.3px 1px -0.3px rgba(color.$light, 0.2),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.08),  // bottom-right specular

  inset 3px 6px 16px rgba(color.$dark, 0.05), // xl top-left shadow
  inset 2px 4px 8px rgba(color.$dark, 0.1), // lg top-left shadow
  inset 1px 2px 4px rgba(color.$dark, 0.1), // md-lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.3), // md top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // sm top-left shadow

/* Inset classesc */
/* ================================== */
.inset-xs {
  box-shadow: $inset-xs;
}

.inset-sm {
  box-shadow: $inset-sm;
}

.inset-md {
  box-shadow: $inset-md;
}

.inset-lg {
  box-shadow: $inset-lg;
}

.inset-xl {
  box-shadow: $inset-xl;
}

/* Inset used in tab menu  */
/* ================================== */
.inset-glass-md {
  position: relative;
  overflow: hidden;

  box-shadow: $inset-md;
  background-color: color.$tint-xdark;

  &::after {
    @include help.pseudo;
    z-index: -1;

    border-bottom: 0.5px solid transparent;
    background: linear-gradient(
        to right,
        rgba(color.$light, 0) 0%,
        rgba(color.$light, 0.1) 50%,
        rgba(color.$light, 0.45) 85%,
        rgba(color.$light, 0.01) 100%
      ) border-box;

    -webkit-mask: 
      border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    mask: 
      border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
  }

  &::before {
    @include help.pseudo;
    z-index: -2;
    @include fill.glass-filter;
    // @include fill.noise-sm; 
  }
}



/* Flat inset  */
/* ================================== */
$flat-inset-sm: 
  inset 0 -0.25px 0.1px -0.35px rgba(color.$light, 0.15), // specular
  inset 0 -2px 1px -2px rgba(color.$light, 0.15),     // bevel blur
  inset 0 -1.5px 0.1px -1px rgba(color.$light, 0.03),      // bevel highlight

  inset 0 0.5px 1px -1px rgba(color.$dark, 0.7), // small shadow
  inset 0 1px 2px -2px rgba(color.$dark, 0.5), // med shadow
  inset 0 2px 4px -4px rgba(color.$dark, 0.3);    // lg shadow

.flat-inset-sm {
  box-shadow: $flat-inset-sm;
}


$flat-inset-md: 
  inset 0 -0.5px 0.1px -0.4px rgba(color.$light, 0.15), // specular
  inset 0 -2px 1px -1.8px rgba(color.$light, 0.15),     // bevel blur
  inset 0 -1.6px 0 -1px rgba(color.$light, 0.03),      // bevel highlight

  inset 0 0.5px 1px -1px rgba(color.$dark, 0.5), // small shadow
  inset 0 1px 2px -2px rgba(color.$dark, 0.5), // small shadow
  inset 0 2px 4px -4px rgba(color.$dark, 0.5), // med shadow
  inset 0 4px 8px -8px rgba(color.$dark, 0.3);    // lg shadow

.flat-inset-md {
  box-shadow: $flat-inset-md;
}

$flat-inset-lg: 
  inset 0 -0.5px 0.1px -0.4px rgba(color.$light, 0.15), // specular
  inset 0 -2px 1px -1.6px rgba(color.$light, 0.15),     // bevel blur
  inset 0 -2px 0 -1.3px rgba(color.$light, 0.03),      // bevel highlight

  inset 0 0.5px 1px -1px rgba(color.$dark, 0.5), // small shadow
  inset 0 2px 4px -4px rgba(color.$dark, 0.5), // small shadow
  inset 0 4px 8px -8px rgba(color.$dark, 0.5), // med shadow
  inset 0 8px 16px -16px rgba(color.$dark, 0.3);    // lg shadow

.flat-inset-lg {
  box-shadow: $flat-inset-lg;
}



// Highlight for small insets 
$inset-highlight-sm: 
  inset -0.3px -0.3px 0 rgba(color.$light, 0.05),      // bottom-right bevel
  inset -0.2px -0.2px 0.2px rgba(color.$light, 0.05),      // bottom-right bevel blur
  inset -0.3px -0.3px 0.3px -0.3px rgba(color.$light, 0.15),      // bottom-right highlight
  inset -0.5px -0.5px 0 -0.25px rgba(color.$light, 0.05);  // bottom-right specular

// Shadow for small insets 
$inset-shadow-sm: 
  inset 0.5px 1px 2px rgba(color.$dark, 0.1),    // lg top-left shadow
  inset 0.25px 0.75px 1.5px -0.5px rgba(color.$dark, 0.25), // med top-left shadow
  inset 0.25px 0.25px 0.5px -0.5px rgba(color.$dark, 0.3); // small top-left shadow

.inset-bevel-sm {
  position: relative;
  font-size: 1rem;
  color: white;
  box-shadow: $inset-highlight-sm;
  -webkit-backdrop-filter: blur(10px) brightness(0.95);
  backdrop-filter: blur(10px) brightness(0.95);
  border-radius: 32px;
  width: 100%;
  height: 100%;

  & svg {
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 20;
    top: 0;
    left: 0;
  }

  &::before {
    content: "";
    position: absolute;
    overflow: hidden;
    pointer-events: none;
    inset: 0;
    border-radius: inherit;
    z-index: 2;
    @include fill.noise-md;
    box-shadow: $inset-shadow-sm;
    filter: brightness(0.3);
    width: 100%;
    height: 100%;
  }
    // &::after {
  //   content: "";
  //   position: absolute;
  //   overflow: hidden;
  //   pointer-events: none;
  //   inset: 0;
  //   border-radius: inherit;
  //   border-color: transparent;
  //   border-bottom-style: solid;
  //   border-width: 0 0 0.5px 0;
  //   background: linear-gradient(
  //       to right,
  //       rgba($snow90, 0.01) 0%,
  //       rgba($snow95, 0.2) 60%,
  //       rgba($sky99, 0.6) 80%,
  //       rgba($sky99, 0.4) 90%,
  //       rgba($snow95, 0.2) 100%
  //     )
  //     border-box;

  //   -webkit-mask: linear-gradient(#fff 0 0) padding-box,
  //     linear-gradient(#fff 0 0);
  //   -webkit-mask-composite: destination-out;
  //   mask-composite: exclude;
  // }
}

.inset-bevel-3 {
  position: relative;
  overflow: hidden;

  // isolation: isolate;
  // z-index: 9;

  font-size: 1rem;
  color: white;

  border-radius: 20px;

  -webkit-backdrop-filter: blur(30px) brightness(0.9);
  backdrop-filter: blur(30px) brightness(0.9);

  &::before {
    content: "";
    position: absolute;
    overflow: hidden;
    pointer-events: none;
    inset: 0;
    z-index: -1;
    border-radius: inherit;

    @include fill.noise-md;
    box-shadow: sha.$inset-sha-md;
    filter: brightness(0.1);
  }

  &::after {
    content: "";
    position: absolute;
    overflow: hidden;
    pointer-events: none;
    inset: 0;
    z-index: 30;
    border-radius: inherit;
    box-shadow: $inset-highlight-sm;
  }
}

.inset-glass-reg {
  pointer-events: none;
  position: relative;

  box-shadow: $inset-highlight-sm;
  // @include fill.noise-md;
  @include fill.glass-filter;

  &::after {
    @include help.pseudo;
    z-index: -1;

    border-bottom: 0.8px solid transparent;
    background: linear-gradient(
        to right,
        rgba(color.$light, 0) 0%,
        rgba(color.$light, 0.1) 50%,
        rgba(color.$light, 0.6) 85%,
        rgba(color.$light, 0.2) 100%
      ) border-box;

    -webkit-mask: border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    mask: border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
  }

  &::before {
    @include help.pseudo;
    z-index: -2;

    box-shadow: sha.$inset-sha-md;
    background-color: color.$tint-dark;
    filter: brightness(0.01);
  }
}

.inset-bevel-m {
  position: relative;
  z-index: -3;

  // box-shadow: $inset-highlight-sm;

  backdrop-filter: blur(20px);

  // -webkit-backdrop-filter: blur(20px) brightness(0.85);
  // backdrop-filter: blur(20px) brightness(0.85);
  // background-color: rgba($ink6, 0.1);

  &::before {
    @include help.pseudo;
    z-index: -3;

    // filter: brightness(0.1);

    box-shadow: inset 0 3px 6px rgba(color.$dark, 0.5),
      // L around
      inset 2px 1.25px 3px rgba(color.$dark, 0.5),
      // med top left
      inset 1px 1px 1px rgba(color.$dark, 0.5); // small around;

    // background-color: rgba($ink6, 0.1);
  }

  &::after {
    @include help.pseudo;
    z-index: 2;

    border-bottom: 0.8px solid transparent;
    background: linear-gradient(
        to right,
        rgba(color.$light, 0) 0%,
        rgba(color.$light, 0.1) 50%,
        rgba(color.$light, 0.6) 85%,
        rgba(color.$light, 0.2) 100%
      )
      border-box;

    -webkit-mask: border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    mask: border-box linear-gradient(#fff, #fff),
      padding-box linear-gradient(#000, #000);

    -webkit-mask-composite: destination-out;
    mask-composite: exclude;
  }
}


.inset-xxs {
  box-shadow: $inset-highlight-sm;
}

// .inset-s {
//   box-shadow: $inset-s;
// }

// .inset-m {
//   box-shadow: $inset-m;
// }

// .inset-l {
//   box-shadow: $inset-l;
// }
