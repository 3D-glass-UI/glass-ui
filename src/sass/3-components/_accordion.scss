/* ================================================== */
/* Accordion */
@use "../forward-styles/design" as *;
@use "../2-util/radius" as r;
@use "../forward-styles/glass";
@use "../3-components/card";
/* ================================================== */

.accordion-bg {
  --space: var(--sm);
  @include r.radius("sm");
  display: grid;
  pointer-events: none;
  background-color: var(--tint-dark);
  box-shadow: var(--sha-md);
  overflow: hidden;
}

.accordion-header {
  width: 100%;
  padding-top: calc(var(--space) * 1.5);
  padding-right: var(--space);
  padding-bottom: var(--space);
  padding-left: var(--space);

  text-align: start;
  font-family: $font-family-title;
  font-weight: $font-weight-lg;
  letter-spacing: $letter-spacing-md;
  text-shadow: var(--text-sha-xl);
  font-size: var(--text-lg);
  line-height: 1;
  color: var(--text-xstrong);
}

.accordion-btn {
  width: 100%;
  z-index: z(btn);
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--sm);
  pointer-events: auto;
  cursor: pointer;
  padding: var(--space);
  background-color: transparent;
  transition: background-color $speed-base $smooth-cubic;

  &:hover {
    background-color: var(--tint-light);
  }
}

.accordion-title {
  text-align: start;
  font-family: $font-family-title;
  font-weight: $font-weight-md;
  letter-spacing: $letter-spacing-md;
  text-shadow: var(--text-sha-md);
  font-size: var(--text-md);
  line-height: 1.3;
  color: var(--text-base);
}

.accordion-icon {
  display: inline;
  z-index: z(on-btn);
  aspect-ratio: 1;
  pointer-events: none;
  background-color: var(--color-white);
  height: 1.5rem;
  transition: transform $speed-2xslow $smooth-cubic;
  transform: rotate(180deg);

  @include bp(md) {
    height: 1.75rem;
  }

  &.is-closed {
    transform: rotate(0deg);
  }
}

.accordion-content {
  height: fit-content;
  display: grid;
  gap: var(--space);
  padding: var(--space);
  overflow: hidden;
  pointer-events: none;
  background-color: var(--tint-2xdark);
  opacity: 1;
  transition: height $speed-base $smooth-cubic,
              padding $speed-base $smooth-cubic,
              opacity $speed-base $smooth-cubic;

  &.is-closed {
    height: 0;
    padding: 0;
    opacity: 0;
  }
}