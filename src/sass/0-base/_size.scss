/* ================================== */
/* Size */
@use "breakpoint" as bp;
/* ================================== */

$root-size: 0.25rem;

/* Size Values */
/* ================================== */
$s1: calc($root-size * 1);   /* 4px  0.25rem */
$s2: calc($root-size * 2);   /* 8px  0.5rem */
$s3: calc($root-size * 3);   /* 12px 0.75rem */
$s4: calc($root-size * 4);   /* 16px 1rem */
$s5: calc($root-size * 5);   /* 20px 1.25rem */
$s6: calc($root-size * 6);   /* 24px 1.5rem */
$s7: calc($root-size * 7);   /* 28px 1.75rem */
$s8: calc($root-size * 8);   /* 32px 2rem */
$s9: calc($root-size * 9);   /* 36px 2.25rem */
$s10: calc($root-size * 10); /* 40px 2.5rem */
$s11: calc($root-size * 11); /* 44px 2.75rem */
$s12: calc($root-size * 12); /* 48px 3rem */
$s13: calc($root-size * 13); /* 52px 3.25rem */
$s14: calc($root-size * 14); /* 56px 3.5rem */
$s15: calc($root-size * 15); /* 60px 3.75rem */
$s16: calc($root-size * 16); /* 64px 4rem */

$s20: calc($root-size * 20); /* 80px 5rem */
$s24: calc($root-size * 24); /* 96px 6rem */
$s28: calc($root-size * 28); /* 112px 7rem */


:root {
  --multiplier:  1;

  --3xs:  calc(#{$s2} * var(--multiplier));
  --2xs:  calc(#{$s3} * var(--multiplier));
  --xs:   calc(#{$s4} * var(--multiplier));
  --sm:   calc(#{$s6} * var(--multiplier));
  --md:   calc(#{$s8} * var(--multiplier));
  --lg:   calc(#{$s10} * var(--multiplier));
  --xl:   calc(#{$s20} * var(--multiplier));
  --2xl:  calc(#{$s24} * var(--multiplier));
  --3xl:  calc(#{$s28} * var(--multiplier));

  @include bp.breakpoint(md) {
    --multiplier: 1.25;
  }

  @include bp.breakpoint(lg) {
    --multiplier: 1.5;
  }
}


/* Size MAP */
/* ================================== */
// $sizes: (
//   3xs: $s1,
//   2xs: $s2,
//   xs:  $s3,
//   sm:  $s6,
//   md:  $s5,
//   lg:  $s6,
//   xl:  $s8,
//   2xl: $s12,
//   3xl: $s20
// );

// html {
//   --3xs:  #{$s3};
//   --2xs:  #{$s4};
//   --xs:   #{$s5};
//   --sm:   #{$s6};
//   --md:   #{$s8};
//   --lg:   #{$s10};
//   --xl:   #{$s12};
//   --2xl:  #{$s14};
//   --3xl:  #{$s16};
// }

// $sizes: (
//   3xs: var(--3xs),
//   2xs: var(--2xs),
//   xs:  var(--xs),
//   sm:  var(--sm),
//   md:  var(--md),
//   lg:  var(--lg),
//   xl:  var(--xl),
//   2xl: var(--2xl),
//   3xl: var(--3xl),
// );



$sizes: (
  3xs: $s1,
  2xs: $s2,
  xs:  $s3,
  sm:  $s4,
  md:  $s6,
  lg:  $s8,
  xl:  $s10,
  2xl: $s12,
  3xl: $s14
);


/* Size modifier mixin */
/* ================================== */
/* Generates size modifier classes */
/* Used in grid/flex gap, border-radius, margin, and padding */
@mixin size-modifiers($attribute: 'a') {
  @each $key, $value in $sizes {
    &-#{$key} {
      #{$attribute}: calc($value * var(--multiplier));

      @include bp.breakpoint(md) {
        #{$attribute}: calc($value * var(--multiplier));
      }
    
      @include bp.breakpoint(lg) {
        #{$attribute}: calc($value * var(--multiplier));
      }
    }
  }
}


.size-3xs {
  width: var(--3xs);
}

.size-2xs {
  width: var(--2xs);
}

.size-xs {
  width: var(--xs);
}

.size-sm {
  width: var(--sm);
}

.size-md {
  width: var(--md);
}

.size-lg {
  width: var(--lg);
}

.size-xl {
  width: var(--xl);
}

.size-2xl {
  width: var(--2xl);
}

.size-3xl {
  width: var(--3xl);
}