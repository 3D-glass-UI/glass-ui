/* ================================== */
/* UI Demo */
@use "../0-config/breakpoint" as bp;
@use "../0-config/color";
@use "../0-config/size";
@use "../0-config/text";
@use "../1-layout" as *;
@use "../1-layout/flex";
@use "../2-visual/glass";
@use "../2-visual/border" as br;
@use "../2-visual/shadow" as sha;
@use "../3-item" as *;
@use "../4-part" as *;
/* ================================== */


.test-oklch {
	color: oklch(40% 0.268735435 34.568626);
}


/* Switch demo */
/* ================================== */
.switch-demo__layout {
  // display: flex;
  // align-items: center;
  // justify-content: space-between;
  // width: fit-content;
  // max-width: 100%;
  height: var(--ui-lg);

  // @include bp.bp(sm) {
  //   justify-content: flex-start;
  // }
}


/* Sizing demo */
/* ================================== */
.rect-2xs {
  width: 16px;
  height: 16px;
  border-radius: 0.15rem;
  // background-color: color.$tint-xdark;
  // border: 1px solid white;
}

.rect-lg {
  width: min(500px, 100%);
  padding: var(--space-thin);
  border-radius: var(--sm);
  display: grid;
  place-content: center start;
}



/* Sizing demo */
/* ================================== */
.size-demo__rect {
  background-color: var(--tint-2xlight);
  border-radius: 0.1rem;
  height: size.$s11;
  margin: size.$s3 0;
  box-shadow: var(--sha-2xs);

  @include bp.bp(md) {
    border-radius: 0.16rem;
  }

  @include bp.bp(lg) {
    border-radius: 0.2rem;
  }
}

/* Tint & fill demo */
/* ================================== */
.tint-demo__rect {
  width: 100%;
  height: fit-content;
  @include flex-c-y;
  justify-content: flex-start;
  padding: var(--sm);
  border-radius: var(--2xs);

  @include bp.bp(md) {
    border-radius: var(--xs);
    padding: var(--md);
  }

  &.text-c {
    justify-content: center;
  }
}

.tint-demo__bin {
  width: 100%;
  display: grid;
  gap: var(--sm);
  padding: var(--2xl);
  border-radius: var(--sm);

  @include bp.bp(sm) {
    border-radius: var(--md);
    padding: var(--space-thin);
  }

  @include bp.bp(md) {
    gap: var(--md);
    border-radius: var(--lg);
  }
}


/*  Inset demo */
/* ================================== */
// weird layout because insets have to be set to `box-sizing: content-box`;
.inset-demo {
  width: min(512px, 100%);
  display: grid;
  gap: var(--lg);
  padding: var(--xl);
  border-radius: var(--lg);
  box-shadow: var(--sha-3xl);

  @include bp.bp(sm) {
    gap: var(--xl);
    padding: var(--2xl);
    border-radius: var(--xl);
  }
}

.inset-demo-bin {
  display: grid;
  place-items: center;
  gap: var(--xl);
  width: 100%;
  height: fit-content;
  padding: 0 var(--xs);
}

.inset-rect {
  box-sizing: content-box;
  display: grid;
  place-content: center start;
  width: 100%;
  padding: var(--xs);
  margin: 0 var(--xs);
  border-radius: var(--xs);
}




.full-w-inset {
  width: 100%;
  padding: var(--space-thin);
  border-radius: 0;
  // background-color: color.$tint-dark;
  display: grid;
  place-content: center start;
}

.text-size__group {
  // display: flex;
  // align-items: end;
  // flex-wrap: wrap;
  display: grid;
  gap: var(--3xs);

  // >:nth-child(1) {
  //   line-height: 1;
  // }

  > span {
    font-family: text.$font-family-title;
    letter-spacing: text.$letter-spacing-md;
    font-size: var(--text-xs);
    font-weight: text.$font-weight-lg;
    padding-right: var(--2xs);
    // line-height: 0.9;
  }

  > .js-textSize {
      line-height: 0.8;
      display: inline;
      overflow-wrap: break-word;
  }
}

.text-size__label {
  display: flex;
  align-items: baseline;
  gap: var(--3xs);
}

// .color {
//   div:nth-child(1) {
//     background-color: hsl(0 0% 50%);
//   }
//   div:nth-child(2) {
//     background-color: hsl(0 20% 50%);
//   }
//   div:nth-child(3) {
//     background-color: hsl(0 40% 50%);
//   }
//   div:nth-child(4) {
//     background-color: hsl(0 60% 50%);
//   }
//   div:nth-child(5) {
//     background-color: hsl(0 80% 50%);
//   }
//   div:nth-child(6) {
//     background-color: hsl(0 100% 50%);
//   }
// }

.dark {
  background-color: oklch(var(--dark-lch) / 1);
}

.gray {
  background-color: oklch(var(--gray-lch) / 1);
}

.gray-80 {
  background-color: oklch(80% var(--gray-ch) / 1);
}

.light {
  background-color: oklch(var(--light-lch) / 1);
}

.primary {
  background-color: oklch(var(--primary-lch) / 1);
}

.accent {
  background-color: oklch(var(--accent-lch) / 1);
}