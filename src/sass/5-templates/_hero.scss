/* ================================================== */
/* Above the fold */
@use "../custom" as *;
@use "../1-custom-styles/breakpoint" as bp;
@use "../1-custom-styles/animation" as ani;
@use "../4-components/card" as card;
/* ================================================== */

.hero {
  min-height: calc(100vh - var(--nav-h));
  height: fit-content;
  display: grid;
  margin: var(--nav-h) auto 0 auto;
  max-width: var(--max-w-xl);
  --clear-tabs: calc( (var(--ui-h-md)) + 8rem + calc(var(--sm) * 2));
  padding: 0 var(--moat) var(--clear-tabs) var(--moat);

  @include bp.bp(xs) {
    --clear-tabs: calc( (var(--ui-h-md)) + 12rem + calc(var(--sm) * 2));
  }
}

.hero-card-bin {
  max-width: 97%;
  min-height: fit-content;
  height: 100%;
  display: grid;
  place-self: center;
  place-items: end center;

  @include bp.bp(sm) {
    place-items: end start;
  }

  @include bp.bp(md) {
    max-width: var(--max-w-xl);
  }

  @include bp.bp(xl) {
    max-width: bp.$bp-xl ;
  }
}

.hero-card {
  @include card.card-base;
  --space: calc(var(--sm) * 1.1);
  width: 100%;
  border-radius: calc(var(--lg) * 1.15);
  box-shadow: var(--sha-lg);
  padding: var(--space);

  @include bp.bp(xs) {
    --space: var(--md);
    width: min(100%, 360px);
  }

  @include bp.bp(sm) {
    width: clamp(360px, 380px, 400px);
  }

  @include bp.bp(md) {
    width: clamp(410px, 430px, 440px);
    --space: calc(var(--md) * 0.95);
  }

  @include bp.bp(lg) {
    width: clamp(440px, 445px, 450px);
    border-radius: calc(var(--lg) * 0.95);
  }
}

.card-3d-bin {
  position: relative;
  width: 96%;
  perspective: 2500px;

  // @media (width > 2400px) {
  //   perspective: 2500px;
  // }
}

.card-3d {
  backface-visibility: hidden;
  will-change: transform;
  transition: transform ani.$speed-2xslow ani.$smooth-cubic;

  transform:
    perspective(2200px)
    rotateY(30deg)
    rotateX(15deg)
    rotateZ(-4deg)
    translateX(10px)
    translateY(-5%);

  @include bp.bp(xs) {
    transform:
      perspective(2500px)
      rotateY(30deg)
      rotateX(20deg)
      rotateZ(-10deg)
      translateX(25px)
      translateY(-12%);
  }

  @include bp.bp(sm) {
    transform:
      perspective(3000px)
      rotateY(25deg)
      rotateX(20deg)
      rotateZ(-10deg)
      translateX(35px)
      translateY(-10%);
  }

  &:hover {
    transform:
      perspective(1000px)
      rotateY(0deg)
      rotateX(0deg)
      rotateZ(0deg)
      translateX(0px)
      translateY(0%);
  }
}

.card-3d-title {
  font-family: $font-family-title;
  font-weight: $font-weight-md;
  letter-spacing: $letter-spacing-sm;
  text-shadow: var(--text-sha-2xl);
  line-height: 1;
  color: var(--text-xstrong);
  font-size: var(--text-lg);

  @include bp(xs) {
    font-size: calc(var(--text-2xl) * 0.9);
  }

  @include bp(sm) {
    font-size: calc(var(--text-2xl) * 0.95);
  }

  @include bp(md) {
    font-size: var(--text-2xl);
  }

  @include bp(lg) {
    font-size: calc(var(--text-2xl) * 0.9);
  }
}

.card-3d-text {
  font-size: var(--text-sm);

  @include bp.bp(md) {
    font-size: var(--text-md);
  }
}