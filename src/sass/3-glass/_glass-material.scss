/* ========================================== */
/* Glass */
@use "../config" as *;
@use "../custom" as *;
@use "../util" as *;
@use "bevel";
@use "filter";
@use "texture" as tex;
/* ========================================== */

/* Base Glass */
/* ========================================== */
@mixin glass--base {
  position: relative;
  @include filter.glass-filter;

  @content;

  &::after {
    @include pseudo;
    z-index: -1;
    box-shadow: bevel.$bevel--md;
    @include tex.noise--md;

    @include bp(xs) {
      box-shadow: bevel.$bevel--lg;
    }
  }
}

.glass--base {
  @include glass--base;
}

/* Glass classes */
/* ========================================== */
.glass {
  @include color-class-mixin($tints, 'background-color'){
    @include glass--base;
  }
}

.glass-bg {
  @include color-class-mixin($bg-colors, 'background-color'){
    @include glass--base;
  }
}


/* Glass with no bevel */
/* ========================================== */
@mixin glass--no-bevel {
  position: relative;
  @include filter.glass-filter;
  @content;

  &::after {
    @include pseudo;
    z-index: -1;
    @include tex.noise--md;
  }
}

.glass--no-bevel {
  @include glass--no-bevel;
}

/* Flat bevel on mobile */
/* ========================================== */
/* For components that switch to edge-to-edge on mobile */
@mixin glass--flat-bevel-xs {
  @include glass--base {
    &::after {
      @include pseudo;
      z-index: -1;
      box-shadow: bevel.$flat-bevel--sm;
      @include tex.noise--md;

      @include bp(xs) {
        box-shadow: bevel.$bevel--lg;
      }
    }
  }
}

.glass--flat-bevel-xs {
  @include glass--flat-bevel-xs;
}