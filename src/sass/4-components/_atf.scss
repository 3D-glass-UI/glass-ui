/* ================================================== */
/* Above the fold */
@use "../custom" as *;
@use "../util" as *;
@use "../glass" as glass;
@use "button" as btn;
@use "card" as card;
/* ================================================== */

.atf {
  min-height: calc(100vh - var(--nav-h));
  height: fit-content;
  display: grid;
  margin: var(--nav-h) auto 0 auto;
  padding: 0 var(--moat) var(--nav-h) var(--moat);

  @include bp(md) {
      padding: 0 2rem var(--nav-h) 2rem;
  }
}

.atf-card-bin {
  width: 97%;
  max-width: var(--max-w-sm);
  place-self: end center;

  display: grid;
  place-items: end center;

  @include bp(sm) {
    place-items: end start;
  }

  @include bp(md) {
    max-width: var(--max-w-lg);
  }
}

.atf-card {
  @include card.card-base;
  --space: calc(var(--sm) * 1.15);
  width: 100%;
  border-radius: calc(var(--lg) * 1.15);
  box-shadow: var(--sha-sm);

  @include bp(xs) {
    --space: var(--md);
    width: min(100%, 360px);
  }

  @include bp(sm) {
    border-radius: var(--lg);
    width: clamp(360px, 380px, 400px);
  }

  @include bp(md) {
    width: clamp(400px, 420px, 430px);
  }

  @include bp(lg) {
    width: clamp(430px, 440px, 460px);
  }
}

.card-3d-bin {
  position: relative;
  perspective: 1500px;
}

.card-3d {
  backface-visibility: hidden;
  will-change: transform;
  transition: transform $speed--2xslow $smooth-cubic;

  transform:
    perspective(2000px)
    rotateY(25deg)
    rotateX(20deg)
    rotateZ(-10deg)
    translateX(16px)
    translateY(-5%);

  @include bp(sm) {
    transform:
      perspective(2000px)
      rotateY(25deg)
      rotateX(20deg)
      rotateZ(-10deg)
      translateX(35px)
      translateY(-10%);
  }

  &:hover {
    transform:
      perspective(1000px)
      rotateY(0deg)
      rotateX(0deg)
      rotateZ(0deg)
      translateX(0px)
      translateY(0%);
  }
}