/* ================================================== */
/* Cards */
@use "../custom" as *;
@use "../util" as *;
@use "../glass" as glass;
/* ================================================== */
/* have proportional padding & gap values that scale with viewport width */
/* have conditional border-radius values that turn to 0 if width = = 100vw */

@mixin card-base {
  --_space: var(--space, 1rem);
  --_neg-space: calc(-1 * var(--space));
  z-index: z(card);
  height: fit-content;
  display: grid;
  gap: var(--_space);
  padding: calc(var(--_space) * 1.618) var(--_space);
  box-shadow: var(--sha-sm);

  @include bp(sm) {
    padding: var(--_space);
  }

  & > .e2e {
    padding: var(--_space);
    margin: 0 var(--_neg-space);
  }

  & > .no-y-space {
    padding: var(--_space);
    margin: var(--_neg-space);
  }

  & > .full-w-fill-noBottomMargin  {
    margin-left: var(--_neg-space);
    margin-right: var(--_neg-space);
    margin-bottom: calc(var(--_neg-space) * 1.618);

    padding: calc(var(--_space) *1.618) var(--_space);

    @include bp(sm) {
      padding: var(--_space);
      margin-bottom: var(--_neg-space);
    }
  }

  & > .e2e-inset {
    padding: var(--_space);
    margin-left: calc(var(--_neg-space) + 0.5px);
    margin-right: var(--_neg-space);

    color: var(--color-3xlight);
    background-color: var(--inset-bg-xdeep);
    box-shadow: var(--flat-inset-lg);
  }

  & > .e2e-no-padding{
    display: grid;
    place-self: center;
    margin-left: var(--_neg-space);
    margin-right: var(--_neg-space);
  }

  & > .e2e no-bottom-space {
    display: grid;
    place-self: center;
    margin-left: var(--_neg-space);
    margin-right: var(--_neg-space);
    margin-bottom: calc(var(--_neg-space) * 1.618);

    @include bp(sm) {
      margin-bottom: var(--_neg-space);
    }
  }

  & > .full-w-img-noMargin {
    display: grid;
    place-self: center;
    // margin: var(--_neg-space);
    margin-left: var(--_neg-space);
    margin-right: var(--_neg-space);
    margin-top: var(--_neg-space);
    margin-bottom: calc(var(--_neg-space) * 1.618);

    // padding: calc(var(--_space) *1.618) var(--_space);

    @include bp(sm) {
      padding: var(--_space);
      margin-bottom: var(--_neg-space);
    }
  }
}

@mixin card-q {
  --_space: var(--space, 1rem);
  --_neg-space: calc(-1 * var(--_space));
  z-index: z(card);
  width: 100%;
  // height: fit-content;
  display: grid;
  // place-items: center;
  gap: var(--_space);
  padding: var(--_space);
  box-shadow: var(--sha-sm);
  // border-radius: 2cqmax;
}

.card-q {
  @include card-q;
}

.card-fit {
  @include card-q;
  width: max-content;
  // width: fit-content;
  height: auto;
  border-radius: var(--md);
}

.card-space-thin {
  --space: 6cqw;

  @include bp(lg) {
    --space: 7cqw;
  }
}

.card-space-base {
  --space: 6cqw;

  @include bp(sm) {
    --space: 7cqw;
  }
}

.card-space-wide {
  --space: 10cqw;

  // @include bp(xs) {
  //   --space: 9cqw;
  // }

  // @include bp(xl) {
  //   --space: 10cqw;
  // }

  @include bp(xl) {
    --space: 80px;
  }
}


/* Edge-to-edge classes */
/* ================================================== */
@mixin e2e {
width: calc(100% + var(--_space) * 2);
  display: grid;
  // place-self: center;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);
}

.e2e {
  @include e2e;
}

.e2e-no-padding{
  @include e2e;
  padding: 0;
}

.e2e-inset {
  @include e2e;
  margin-left: calc(var(--_neg-space) + 0.5px);
  background-color: var(--inset-bg-xdeep);
  box-shadow: var(--flat-inset-md);
}

.no-y-space {
  margin-top: var(--_neg-space);
  margin-bottom: var(--_neg-space);
}

.no-bottom-space {
  margin-bottom: var(--_neg-space);
}

.bottom-radius {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
  overflow: hidden;
}

/* Card Titles */
/* ================================================== */
@mixin card-title {
  font-family: $font-family-title;
  letter-spacing: $letter-spacing-md;
  // line-height: 1.2;
  color: var(--text-base);
  text-align: center;
}

.card-title-lg {
  @include card-title;
  font-weight: $font-weight-sm;
  text-shadow: var(--text-sha-lg);
  font-size: var(--text-3xl);
  line-height: 1;
// color: red;
}

.card-title-md {
  @include card-title;
  font-weight: $font-weight-md;
  text-shadow: var(--text-sha-md);
  font-size: var(--text-xl);
// color: blue;
}

.card-title-sm {
  @include card-title;
  font-weight: $font-weight-md;
  text-shadow: var(--text-sha-sm);
  font-size: var(--text-lg);
// color: purple;
}

.card-subtitle {
  font-family: $font-family-body;
  font-weight: $font-weight-md;
  letter-spacing: $letter-spacing-sm;
  line-height: $line-height-md;
  text-align: center;
  color: var(--text-base);
// color:  green;
  text-shadow: var(--text-sha-3xs);
  font-size: var(--text-sm);
}

.title-group-lg {
  display: flex;
  flex-direction: column;
  gap: var(--xs);
}



/* Card Container queries */
/* ================================================== */
@container (width < 300px) {
  .card-q {
    @include radius("lg");
    // background-color: rgba(255, 0, 0, 0.5);
  }

  .card-subtitle {
    font-size: var(--text-xs);
  }
}

@container (width >= 300px) {
  .card-q {
    @include radius("lg");
    // background-color: rgba(255, 255, 0, 0.5);
  }

  .card-subtitle {
    font-size: var(--text-xs);
  }
}

@container (width >= 450px) {
  .card-q {
    @include radius("lg");
    // background-color: rgba(0, 255, 0, 0.5);
  }

  // .card-subtitle {
  //   font-size: var(--text-sm);
  // }
}

@container (width >= 600px) {
  .card-q {
    @include radius("xl");
    // background-color: rgba(0, 0, 255, 0.5);
  }

  .card-subtitle {
    font-size: var(--text-sm);
  }
}

@container (width >= 800px) {
  .card-q {
    @include radius("xl");
  }
}

@container (width >= 960px) {
  .card-q {
    @include radius("xl");
  }
}

@container (width >= 99vw) {
  .card-q {
    border-radius: 0;
    // background-color: rgba(255, 0, 255, 0.5);
  }

  .e2e-inset {
    margin-left: var(--_neg-space);
  }
}




/* Card-glass container query container */
/* ================================================== */
.glass-co {
  container-type: inline-size;
}
