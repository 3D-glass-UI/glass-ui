/* ================================================== */
/* generator */
@use "../forward-styles/design" as *;
@use "../forward-styles/glass" as *;
@use "../forward-styles/util" as *;
@use "../forward-styles/components" as *;
/* ================================================== */

#glass-generator {
  --color-gen: var(--tint-clear);
  --bevel-gen: var(--bevel-md);
  --noise-gen: var(--noise-gray);
  --shadow-gen: var(--sha-xs);

  --blur-gen: 16px;
  --bright-gen: 0.5;
  --satu-gen: 2;

  --filter-gen: blur(var(--blur-gen)) brightness(var(--bright-gen)) saturate(var(--satu-gen));
}

.glass-3d-gen {
  position: relative;
  // z-index: 4;
  z-index: z(glass);
  box-shadow: var(--shadow-gen);

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    // z-index: 5;
    z-index: z(glass-after);
    box-shadow: var(--bevel-gen);
  }

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    // z-index: 3;
    z-index: z(glass-b4);
    background-color: var(--color-gen);
    background-repeat: repeat;
    background-size: 40px;
    background-image: var(--noise-gen);

    -webkit-backdrop-filter: var(--filter-gen);
    backdrop-filter: var(--filter-gen);
  }

  & > * {
    position: relative;
    // z-index: 6;
    z-index: z(on-glass);
  }

}

.generator-area {
  position: relative;
  width: 100%;
  height: 100%;
  padding: var(--nav-h) 0;
  place-items: start center;

  @include bp(lg) {
    height: 100vh;
    // padding: var(--5xl) 0 0 0;
    padding: var(--5xl) 0 var(--2xl) 0;
  }

  // @include bp(xl) {
  //   padding: var(--5xl) 0 var(--2xl) 0;
  // }
}

.generator-layout {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr;

  @include bp(lg) {
    grid-template-columns: 1fr auto;
    height: 100%;
  }

  @include bp(xl) {
    max-width: $bp-xl;
    grid-template-columns: 2fr 1fr;
  }
}

/* Glass  */
.glass-bin {
  width: 100%;
  min-height: fit-content;
  height: 50vh;
  display: grid;
  place-items: center;

  @include bp(lg) {
    height: 100%;
  }
}

.glass-tele-rect-bin {
    width: 100%;
    padding: 0 var(--moat);

    @include bp(xs) {
      padding: 0 calc(var(--moat) * 1.5);
    }

    @include bp(sm) {
      max-width: 380px;
      padding: 0;
    }

    @include bp(md) {
      max-width: 400px;
    }
}

.glass-tele-rect {
  display: grid;
  touch-action: pan-y;
  min-width: max-content;

  padding: 12% 4% 4% 4%;
  @include radius("md");

  will-change: padding;
  transition: padding $smooth-cubic $speed-base;

  @include bp(xs) {
    padding: 14% 4% 4% 4%;
  }

  @include bp(lg) {
    padding: 16% 4% 4% 8%;
    @include radius("sm");
  }

  @media (hover: hover) {
    &:hover {
      padding: 4% 4% 10% 8%;
    }
  }
}

.glass-rect {
  width: max-content;
  margin: 0 auto;

  & > h1 {
    word-break: keep-all;
    pointer-events: none;
    @include super-wide($font-weight-sm, --text-2xs, 3px);
    line-height: $line-height-sm;
    text-align: center;
    color: var(--text-mild);

    padding: var(--md) 0 0 0;

    @include bp(xs) {
      @include super-wide($font-weight-sm, --text-2xs, 5px);
      padding: var(--xl) 0 0 0;
    }

    @include bp(sm) {
      @include super-wide($font-weight-sm, --text-xs, 6px);
      padding: var(--2xl) 0 var(--xs) 0;
    }

    @include bp(lg) {
      @include super-wide($font-weight-sm, --text-xs, 5px);
      padding: var(--xl) 0 var(--xs) 0;
    }
  }
}

/* Generator  */
.generator-bin {
  width: 100%;
  height: 100%;
  display: grid;
  place-items: start center;

  @include bp(md) {
    place-items: start end;
  }

  @include bp(lg) {
    border-radius: var(--md) 0 0 var(--md);
    place-content: center end;
    overflow-y: scroll;
    scrollbar-width: none;
    -ms-overflow-style: none;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  @include bp(xl) {
    width: fit-content;
    border-radius: var(--md);
  }
}

.generator {
  --space: var(--sm);

  width: 100%;
  max-width: 400px;
  height: fit-content;
  @include radius("sm");

  @include bp(xs) {
    --space: var(--md);
  }

  @include bp(sm) {
    max-width: 420px;
    @include radius("md");
  }

  @include bp(md) {
    --space: var(--sm);
    max-width: 450px;
    border-radius: var(--md) 0 0  var(--md);

  // --space-half: calc(var(--space) * 0.5);
    // & .switch-accordion-controls {
    //   padding: var(--space-half) var(--space) var(--space-half) var(--space);
    // }

    // & > :first-child .switch-accordion-controls {
    //   padding: var(--space) var(--space) var(--space-half) var(--space);
    // }

    // & > :last-child .switch-accordion-controls {
    //   padding: var(--space-half) var(--space) var(--space) var(--space);
    //   outline: 1px solid rgb(192, 193, 255);
    // }
  }

  @include bp(xl) {
    border-radius: var(--md);
  }
}


/* Switch  */

.switch-accordion-controls {
  position: relative;
  pointer-events: none;
  cursor: default;
  z-index: z(on-card);

  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
  padding: var(--space);

  // will-change: background-color;
  // transition: background-color $speed-fast $smooth-cubic;

  // &:hover {
  //   background-color: var(--tint-light);
  // }

  // &:focus-visible {
  //   @include focus-visible-inner;
  //   background-color: var(--tint-light);
  // }
}

.switch-label-group {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--xs);
  place-items: center start;
  pointer-events: none;
  cursor: default;
  // outline: 1px solid pink;

  &.is-off {
    & .switch-label {
      color: var(--text-xmild);
    }
  }
}

.switch-label {
  @include title-md(start);
  font-weight: $font-weight-lg;
  color: var(--text-xstrong);
  text-shadow: var(--text-sha-xl);
  pointer-events: none;
  cursor: default;
}


.switch-accordion-icon {
  pointer-events: none;
  z-index: -1;
  display: inline;
  height: 1.75em;
  place-self: center end;

  background-color: var(--text-strong);
  transform: rotate(180deg);
  transition: transform $speed-xslow $smooth-cubic;
}

.switch-accordion-btn {
  display: grid;
  width: 100%;
  place-self: center end;
  cursor: pointer;
  pointer-events: auto;

  &:disabled {
    cursor: auto;

    & > .switch-accordion-icon {
      background-color: transparent;
      @include btn-svg-transition;
    }
  }
}

.switch-accordion-content {
  pointer-events: none;
  z-index: z(card);
  display: grid;
  gap: var(--md);
  background-color: var(--tint-2xdark);

  height: fit-content;
  padding: var(--space);
  opacity: 1;
  transition: height $speed-base $smooth-cubic,
              padding $speed-base $smooth-cubic,
              opacity $speed-base $smooth-cubic;

  & > * {
    z-index: z(on-card);
    opacity: 1;
    transition: height $speed-fast $smooth-cubic,
                padding $speed-fast $smooth-cubic,
                opacity $speed-fast $smooth-cubic;
  }

  // &.is-closed {
  //   z-index: -20;
  //   height: 0;
  //   padding: 0;
  //   opacity: 0;

  //   & > * {
  //     z-index: -20;
  //     height: 0;
  //     padding: 0;
  //     opacity: 0;
  //   }
  // }
}

/* Switch accordion */
.switch-accordion {

  &.is-closed {
    & .switch-accordion-content {
      z-index: -20;
      height: 0;
      padding: 0;
      opacity: 0;

      & > * {
        z-index: -20;
        height: 0;
        padding: 0;
        opacity: 0;
      }
    }

    .switch-accordion-icon {
      transform: rotate(0deg);
    }
  }
}

/* Backdrop-filter  */
/* ================================================== */
.filters-grid {
  display: grid;
  gap: var(--md);
}

.filter-function-controls {
  width: 100%;
  max-width: 100%;
  height: fit-content;
  display: grid;
  grid-template-columns: 112px 165px;
  gap: var(--2xs);
  align-items: end;
  justify-content: center;

  @include bp(xs) {
    grid-template-columns: 112px 190px;
  }

  @include bp(sm) {
    gap: var(--xs);
    grid-template-columns: 115px 230px;
  }

  @include bp(md) {
    grid-template-columns: 135px 250px;
  }

  & .slider-w-display {
    width: 100%;
    opacity: 1;
    justify-self: end;
  }

  &.is-off {
    & .slider-w-display {
      opacity: 0.4;
      pointer-events: none;
    }

    & label {
      color: var(--text-xmild);
    }
  }
}

.filter-checkbox-layout {
  display: flex;
  align-items: center;
  gap: var(--4xs);
  justify-self: start;
  @include bp(sm) {
    gap: var(--3xs);
  }

  & > label {
    width: max-content;
    word-break: keep-all;
    @include inline-label(--text-sm, 1);
    color: var(--text-strong);
    text-shadow: var(--text-sha-xs);

    @include bp(md) {
      @include inline-label(--text-md, 1);
    }
  }
}
