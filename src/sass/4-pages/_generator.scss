/* ================================================== */
/* generator */
@use "../forward-styles/design" as *;
@use "../forward-styles/glass" as *;
@use "../forward-styles/util" as *;
@use "../forward-styles/components" as *;
/* ================================================== */
.glass-3d-gen {
--color: var(--tint-clear);
--bevel: var(--bevel-md);
--noise: var(--noise-gray);
--shadow: var(--sha-xs);
--filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
--blur: 36px;
--bright: 1;
--satu: 1.33;

  position: relative;
  // z-index: 4;
  z-index: z(glass);
  box-shadow: var(--shadow);

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    // z-index: 5;
    z-index: z(glass-after);
    box-shadow: var(--bevel);
  }

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;

    // z-index: 3;
    z-index: z(glass-b4);
    background-color: var(--color);
    background-repeat: repeat;
    background-size: 40px;
    background-image: var(--noise);

    -webkit-backdrop-filter: var(--filter);
    backdrop-filter: var(--filter);
    // @include glass-filter(var(--blur), var(--bright), var(--satu));

    // -webkit-backdrop-filter: blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
    // backdrop-filter:         blur(var(--blur)) brightness(var(--bright)) saturate(var(--satu));
  }

  & > * {
    position: relative;
    // z-index: 6;
    z-index: z(on-glass);
  }

}


.generator-area {
  width: 100%;
  min-height: fit-content;
  height: 100vh;
  height: 100svh;
  padding: var(--nav-h) 0 0 0;
  display: grid;
  place-items: start center;
}

.generator-layout {
  width: 100%;
  min-height: max-content;
  height: 100%;

  display: grid;
  grid-template-columns: 1fr;
  place-content: start center;

  @include bp(lg) {
    grid-template-columns: 1fr auto;
    padding-top: var(--md);
  }

  @include bp(xxl) {
    max-width: $bp-xl;
    grid-template-columns: 1fr 1fr;
    place-content: center;
  }
}

/* Glass  */
.glass-bin {
  width: 100%;
  min-height: fit-content;
  height: 50vh;
  display: grid;
  place-items: center;

  @include bp(lg) {
    height: 100vh;
  }
}

.glass-tele-rect-bin {
    width: 100%;
    padding: 0 var(--moat);

    @include bp(xs) {
      padding: 0 calc(var(--moat) * 1.5);
    }

    @include bp(sm) {
      max-width: 380px;
      padding: 0;
    }

    @include bp(md) {
      max-width: 400px;
    }
}

.glass-tele-rect {
  display: grid;
  touch-action: pan-y;
  min-width: max-content;

  padding: 12% 4% 4% 4%;
  background-color: var(--tint-xdark);
  @include radius("md");

  will-change: padding;
  transition: padding $smooth-cubic $speed-base;

  @include bp(xs) {
    padding: 14% 4% 4% 4%;
  }

  @include bp(lg) {
    padding: 16% 4% 4% 8%;
    @include radius("sm");
  }

  @media (hover: hover) {
    &:hover {
      padding: 4% 4% 10% 8%;
    }
  }
}

.glass-rect {
  width: max-content;
  margin: 0 auto;

  & > h1 {
    word-break: keep-all;
    pointer-events: none;
    @include super-wide($font-weight-sm, --text-2xs, 3px);
    line-height: $line-height-sm;
    text-align: center;
    color: var(--text-xmild);

    padding: var(--md) 0 0 0;

    @include bp(xs) {
      @include super-wide($font-weight-sm, --text-2xs, 5px);
      padding: var(--xl) 0 0 0;
    }

    @include bp(sm) {
      @include super-wide($font-weight-sm, --text-xs, 6px);
      padding: var(--2xl) 0 var(--xs) 0;
    }

    @include bp(lg) {
      @include super-wide($font-weight-sm, --text-xs, 5px);
      padding: var(--xl) 0 var(--xs) 0;
    }
  }
}

/* Generator  */
.generator-bin {
  min-width: fit-content;
  width: 100%;

  min-height: fit-content;
  height: 100%;
  display: grid;
  place-items: start center;

  @include bp(md) {
    place-items: start end;
  }

  @include bp(lg) {
    place-items: center end;
  }

  @include bp(xxl) {
    place-content: center;
  }
}

.generator {
  --space: var(--lg);
  --space-half: calc(var(--space) * 0.5);

  @include bp(md) {
    --space: var(--md);
  }

  width: 100%;
  max-width: 400px;
  height: fit-content;

  @include radius("sm");

  @include bp(sm) {
    @include radius("md");
  }

  @include bp(md) {
    width: 400px;
    border-radius: var(--md) 0 0  var(--md);
  }

  @include bp(xxl) {
    border-radius: var(--md);
  }

  & .switch-group {
    padding: var(--space-half) var(--space) var(--space-half) var(--space);
  }

  & > :first-child .switch-group {
    padding: var(--space) var(--space) var(--space-half) var(--space);
  }

  & > :last-child .switch-group {
    padding: var(--space-half) var(--space) var(--space) var(--space);
  }
}

//Switch
// .switch-accordion {

// }

.switch-group {
  position: relative;
  pointer-events: auto;
  cursor: pointer;
  z-index: z(on-card);

  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;

  &.is-off {
    & .switch-label {
      color: var(--text-mild);
    }
  }

  // will-change: background-color;
  // transition: background-color $speed-fast $smooth-cubic;

  // &:hover {
  //   background-color: var(--tint-light);
  // }

  // &:focus-visible {
  //   @include focus-visible-inner;
  //   background-color: var(--tint-light);
  // }
}

.switch-label-group {
  width: 100%;
  height: fit-content;
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--xs);
  place-items: center start;
}

.switch-label {
  @include title-md(start);
  font-weight: $font-weight-lg;
  color: var(--text-xstrong);
  text-shadow: var(--text-sha-xl);
  pointer-events: none;
  cursor: default;
}

.content-toggle {
  display: grid;
  width: 100%;
  place-self: center end;
  cursor: pointer;

  & > .accordion-icon {
    background-color: var(--text-strong);
    height: 1.75em;
    place-self: center end;
  }

  &:disabled {
    cursor: auto;

    & > .accordion-icon {
      background-color: transparent;
      @include btn-svg-transition;
    }
  }
}

.switch-accordion-content {
  pointer-events: none;
  z-index: z(card);
  display: grid;
  gap: var(--space);
  background-color: var(--tint-2xdark);

  height: fit-content;
  // padding: var(--space);
  padding: var(--space) var(--space) var(--space) calc(var(--space) * 1.5);
  opacity: 1;
  transition: height $speed-base $smooth-cubic,
              padding $speed-base $smooth-cubic,
              opacity $speed-base $smooth-cubic;

  & > * {
    z-index: z(on-card);
    opacity: 1;
    transition: height $speed-fast $smooth-cubic,
                padding $speed-fast $smooth-cubic,
                opacity $speed-fast $smooth-cubic;
  }

  &.is-closed {
    z-index: -1;
    height: 0;
    padding: 0;
    opacity: 0;

    & > * {
      z-index: -1;
      height: 0;
      padding: 0;
      opacity: 0;
    }
  }
}


.slider {
  margin-left: 1rem;
}


// .generator-title {
//   @include title($font-weight-sm);
//   font-size: var(--text-lg);
//   letter-spacing: $letter-spacing-xs;
//   text-align: center;
//   color: var(--text-xstrong);
//   text-shadow: var(--text-sha-2xl);
// }



/* Base for switch | checkbox | radio button  âœ¨ Config these values */
/* ================================================== */
// @mixin btn-switch-base {
//   --input-h: var(--ui-h-xs);

//   --bg: var(--inset-bg-deep);
//   --bg-hover: var(--tint-2xdark);
//   --inset: var(--inset-sm);
//   --knob: hsl(var(--neutral-95) / 1);
//   --knob-sha: var(--sha-xs);

//   --bg-checked: hsl(var(--primary-50) / 1);
//   --bg-checked-hover: hsl(var(--primary-30) / 1);

//   --bg-disabled: var(--inset-bg-xdeep);
//   --inset-disabled: none;
//   --knob-disabled: hsl(var(--neutral-90) / 0.25);
//   --knob-disabled-sha: none;

//   --bg-disabled-checked: hsl(var(--primary-70) / 0.4);

//   position: relative;
//   z-index: z(input);
//   overflow: hidden;
//   pointer-events: auto;
//   cursor: pointer;
//   background-color: var(--bg);
//   box-shadow: var(--inset);
//   will-change: background-color;
//   transition: background-color $speed-slow $smooth-cubic;

//   &::after {
//     @include pseudo;
//     z-index: z(on-input);
//     overflow: hidden;
//   }

//   @media (pointer: fine) {
//     &:hover {
//       background-color: var(--bg-hover);
//     }
//   }

//   & [aria-checked="true"] {
//     background-color: var(--bg-checked);

//     &:hover {
//       background-color: var(--bg-checked-hover);
//     }
//   }

//   &:focus-visible {
//     @include focus-visible-outer;
//   }

//   &:disabled {
//     cursor: not-allowed;
//     background-color: var(--bg-disabled);
//     box-shadow: var(--inset-disabled);

//     & + label {
//       color: var(--text-xmild);
//     }

//     &::after {
//       box-shadow: var(--knob-disabled-sha);
//     }

//     &:checked {
//       background-color: var(--bg-disabled-checked);

//       &::after {
//         box-shadow: var(--knob-disabled-sha);
//       }
//     }
//   }
// }

// /* Button switch */
// /* ================================================== */
// .btn-switch {
//   --switch-width: calc(var(--input-h) * 1.8);
//   --thumb-margin: 3.5px;

//   @include btn-switch-base;
//   display: inline-flex;
//   width: var(--switch-width);
//   height: var(--input-h);
//   align-items: center;
//   border-radius: 99px;

//     &::after {
//       display: block;
//       aspect-ratio: 1;
//       margin: var(--thumb-margin);
//       height: calc(100% - (2 * var(--thumb-margin)));
//       background-color: var(--knob);
//       box-shadow: var(--knob-sha);
//       border-radius: 99px;
//       transition: margin $speed-base $smooth-cubic;
//     }

//   & [aria-checked="true"] {
//     &::after {
//       margin-inline-start: calc(var(--switch-width) - var(--input-h) + var(--thumb-margin));
//     }
//   }

//   &:disabled {
//     &::after {
//       background-color: var(--knob-disabled);
//     }
//   }
// }