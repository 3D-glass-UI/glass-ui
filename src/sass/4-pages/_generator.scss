/* ================================================== */
/* generator */
@use "../forward-styles/design" as *;
@use "../forward-styles/glass" as *;
@use "../forward-styles/util" as *;
@use "../forward-styles/components" as *;
/* ================================================== */

.generator-area {
  width: 100%;
  max-width: $bp-lg;
  min-height: fit-content;
  height: 100%;

  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0;
  padding: var(--nav-h) 0 var(--moat) 0;

  @include bp(md) {
    padding: var(--nav-h) var(--moat);
  }

  @include bp(xl) {
    padding: var(--nav-h) 0;
  }
}

.glass-bin {
  width: 100%;
  min-height: fit-content;
  display: grid;
  place-items: center;
  padding: var(--xl) var(--moat);

// background-color: rgba(234, 255, 0, 0.371);

  @include bp(md) {
    padding: 0;
    width: auto;
    flex: 1;
  }
}

.glass {
  max-width: $bp-xs;
  width: 100%;
  aspect-ratio: 2 / 1;

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  padding: var(--2xl);

  @include radius("md");

  @include glass-base(
    --bevel-md,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));

  @include bp(md) {
    width: 80%;
    aspect-ratio: 3 / 2;
  }

  & h1 {
    width: max-content;
    line-height: 1;
  }
}

.generator-bin {
  width: 100%;
  min-height: fit-content;
  display: grid;
  padding: 0;

  // background-color: rgba(0, 128, 255, 0.371);

  @include bp(sm) {
    padding: 0 var(--moat);
  }

  @include bp(md) {
    flex: 1;
    padding: var(--nav-h) 0 0 0;
  }
}

.generator {
  max-width: 100%;
  height: fit-content;
  margin: 0 auto;

  @include bp(sm) {
    max-width: $bp-xs;
  }
}


.switch-group {
  position: relative;
  // pointer-events: auto;
  // cursor: pointer;
  pointer-events: none;
  cursor: default;
  z-index: z(on-card);

  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--sm);
  padding: var(--space);

  &.is-off {
    & .switch-label {
      color: gray;
    }
  }

  // will-change: background-color;
  // transition: background-color $speed-fast $smooth-cubic;

  // &:hover {
  //   background-color: var(--tint-light);
  // }

  // &:focus-visible {
  //   @include focus-visible-inner;
  //   background-color: var(--tint-light);
  // }
}

.switch-label {
  @include title-md(start);
  color: blue;
  pointer-events: none;
  cursor: default;
}

.to-switch {
  cursor: pointer;
  & > .accordion-icon {
    background-color: blue;
  }

  &:disabled {
    cursor: auto;

    & > .accordion-icon {
      background-color: transparent;
    }
  }
}

/* Base for switch | checkbox | radio button  âœ¨ Config these values */
/* ================================================== */
// @mixin btn-switch-base {
//   --input-h: var(--ui-h-xs);

//   --bg: var(--inset-bg-deep);
//   --bg-hover: var(--tint-2xdark);
//   --inset: var(--inset-sm);
//   --knob: hsl(var(--neutral-95) / 1);
//   --knob-sha: var(--sha-xs);

//   --bg-checked: hsl(var(--primary-50) / 1);
//   --bg-checked-hover: hsl(var(--primary-30) / 1);

//   --bg-disabled: var(--inset-bg-xdeep);
//   --inset-disabled: none;
//   --knob-disabled: hsl(var(--neutral-90) / 0.25);
//   --knob-disabled-sha: none;

//   --bg-disabled-checked: hsl(var(--primary-70) / 0.4);

//   position: relative;
//   z-index: z(input);
//   overflow: hidden;
//   pointer-events: auto;
//   cursor: pointer;
//   background-color: var(--bg);
//   box-shadow: var(--inset);
//   will-change: background-color;
//   transition: background-color $speed-slow $smooth-cubic;

//   &::after {
//     @include pseudo;
//     z-index: z(on-input);
//     overflow: hidden;
//   }

//   @media (pointer: fine) {
//     &:hover {
//       background-color: var(--bg-hover);
//     }
//   }

//   & [aria-checked="true"] {
//     background-color: var(--bg-checked);

//     &:hover {
//       background-color: var(--bg-checked-hover);
//     }
//   }

//   &:focus-visible {
//     @include focus-visible-outer;
//   }

//   &:disabled {
//     cursor: not-allowed;
//     background-color: var(--bg-disabled);
//     box-shadow: var(--inset-disabled);

//     & + label {
//       color: var(--text-xmild);
//     }

//     &::after {
//       box-shadow: var(--knob-disabled-sha);
//     }

//     &:checked {
//       background-color: var(--bg-disabled-checked);

//       &::after {
//         box-shadow: var(--knob-disabled-sha);
//       }
//     }
//   }
// }

// /* Button switch */
// /* ================================================== */
// .btn-switch {
//   --switch-width: calc(var(--input-h) * 1.8);
//   --thumb-margin: 3.5px;

//   @include btn-switch-base;
//   display: inline-flex;
//   width: var(--switch-width);
//   height: var(--input-h);
//   align-items: center;
//   border-radius: 99px;

//     &::after {
//       display: block;
//       aspect-ratio: 1;
//       margin: var(--thumb-margin);
//       height: calc(100% - (2 * var(--thumb-margin)));
//       background-color: var(--knob);
//       box-shadow: var(--knob-sha);
//       border-radius: 99px;
//       transition: margin $speed-base $smooth-cubic;
//     }

//   & [aria-checked="true"] {
//     &::after {
//       margin-inline-start: calc(var(--switch-width) - var(--input-h) + var(--thumb-margin));
//     }
//   }

//   &:disabled {
//     &::after {
//       background-color: var(--knob-disabled);
//     }
//   }
// }