/* ================================================== */
/* Grid | Flex-box | Gap */
@use "sass:map";
@use "mixin" as mix;
/* ================================================== */

/* ================================================== */
/* Gap classes */
/* ================================================== */
.gap { @include mix.size-modifiers('gap'); }


/* ================================================== */
/* flex-box */
/* ================================================== */
.flex {
  display: flex;
}

/* flex center x & y */
@mixin flex-c {
  display: flex;
  justify-content: center;
  align-items: center;
}
.flex-c {
  @include flex-c;
}

.flex-column-c {
  @include flex-c;
  flex-direction: column;
}

/* flex-direction: */
/* ================================================== */
.flex-column {
  display: flex;
  flex-direction: column;
}

.flex-column-rev {
  display: flex;
  flex-direction: column-reverse;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-row-rev {
  display: flex;
  flex-direction: row-reverse;
}

/* flex-wrap: */
/* ================================================== */
.flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

.flex-wrap-rev {
  display: flex;
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  display: flex;
  flex-wrap: nowrap;
}

/* justify-content: */
/* ================================================== */
.justify-l {
  display: flex;
  justify-content: flex-start;
}

.justify-r {
  display: flex;
  justify-content: flex-end;
}

.justify-c {
  display: flex;
  justify-content: center;
}

.justify-sb {
  display: flex;
  justify-content: space-between;
}

.justify-sa {
  display: flex;
  justify-content: space-around;
}

.justify-se {
  display: flex;
  justify-content: space-evenly;
}

/* align-items: */
/* ================================================== */
.align-items-t {
  display: flex;
  align-items: flex-start;
}

.align-items-c {
  display: flex;
  align-items: center;
}

.align-items-b {
  display: flex;
  align-items: flex-end;
}

.align-items-s {
  display: flex;
  align-items: stretch;
}

/* For multi-line flex-wrap */
/* ================================================== */
.align-content-c {
  display: flex;
  align-content: center;
}

.align-content-sb {
  display: flex;
  align-content: space-between;
}

.align-content-sa {
  display: flex;
  align-content: space-around;
}

.align-content-se {
  display: flex;
  align-content: space-evenly;
}

/* For flex items */
/* ================================================== */
.align-self-t {
  align-self: flex-start;
}

.align-self-c {
  align-self: center;
}

.align-self-b {
  align-self: flex-end;
}

.align-self-s {
  align-self: stretch;
}

.flex-100 {
  display: flex;
  flex: 0 1 100px;
}

/* ================================================== */
/* Grid */
/* ================================================== */
.grid {
  display: grid;
}

/* grid center x & y */
@mixin grid-c {
  display: grid;
  place-items: center;
}
.grid-c {
  @include grid-c;
}

.grid-content-c {
  display: grid;
  place-content: center;
}

.grid-12 {
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

/* auto-fill */
/* Fills the row with as many columns as it can fit. So it creates implicit columns. */
.grid-auto-fill {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

/* auto-fit */
/* Fits the columns it has into the space by expanding them. */
.grid-auto-fit {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.grid-auto-fit-300 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* Properties for Grid Items */
/* ================================================== */
.place-self-c {
  place-self: center;
}

.place-self-s {
  place-self: stretch;
}