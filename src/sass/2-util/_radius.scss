/* ================================================== */
/* Border Radius */
@use "../0-design/space" as *;
@use "mixin" as *;
/* ================================================== */

/* Conditional border-radius */
/* ================================================== */
@mixin radius($key) {
  @if not map-has-key($sizes, $key) {
    @warn "Warning: `#{$key}` is not a valid T-shirt size. Select from: #{$sizes}";
  } @else {
      border-radius: max(0px, min(var(--#{$key}), calc((100vw - 16px - 100%) * 9999))) / var(--#{$key});
  }
}


/* Nested border radius */
/* ================================================== */
@mixin outer-radius ($inner-radius, $padding) {
  $r: calc($inner-radius + $padding);
  $f: calc(($r * 3) / 100);
  $br: calc($r - $f);

  border-radius: $br;
}


/* Top or bottom radius only */
/* ================================================== */
@mixin top-radius {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  overflow: hidden;
}

@mixin bottom-radius {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
  overflow: hidden;
}

.top-radius { @include top-radius; }
.bottom-radius { @include bottom-radius; }


/* Border radius classes */
/* ================================================== */
/* Generates classes using the $sizes map from _space.scss */
.radius {
  @include size-modifiers('border-radius') {
  }
}