/* ================================================== */
/* Demo only styles */
@use "../forward-styles/design" as *;
@use "../forward-styles/glass" as *;
@use "../forward-styles/util" as *;
@use "../forward-styles/components" as *;
/* ================================================== */

/* Bevel Demo */
/* ================================================== */
.bevel-demo {
  position: relative;
  // z-index: 2;
  width: 100%;
  height: max-content;
  border-radius: var(--md);
  padding: var(--xl);
  color: white;
  display: grid;
}

/* inset Demo */
/* ================================================== */
.inset-demo-bin {
  width: 100%;
  height: fit-content;

  border-radius: var(--xs);
  overflow: hidden;

  // @include bp(md) {
  //   border-radius: var(--sm);
  // }
}

.inset-demo {
  width: 100%;
  height: fit-content;
  border-radius: inherit;
  background-color: var(--inset-bg-deep);
  padding: var(--xs);

  // @include bp(md) {
  //   padding: var(--sm);
  // }
}


/* Color Demo */
/* ================================================== */
.color-stack {
  display: grid;
  border-radius: var(--sm);
  overflow: hidden;

  > * {
    width: min(100%, 400px);
    height: fit-content;
    display: flex;
    align-items: center;
    padding: var(--xs);
  }
}


/* Contact section */
/* ================================================== */
.contact-inset-bin {
  width: 100%;
  border-radius: var(--sm);
  overflow: hidden;
}

.contact-inset {
  display: grid;
  place-items: center;
  gap: var(--2xs);
  width: 100%;
  height: fit-content;
  padding: var(--lg);
  box-shadow: var(--inset-lg);
  border-radius: inherit;
  background-color: var(--inset-bg-deep);
}

.stamp {
  width: 100px;
  aspect-ratio : 1 / 1;
  overflow: hidden;
  border-radius: var(--xs);
  opacity: 0.85;
  box-shadow: var(--sha-md);

  @include bp(xs) {
    width: 150px;
    border-radius: var(--sm);
  }

  @include bp(sm) {
    width: 180px;
  }

  & > img {
    width: 100%;
  }
}

/* UI height */
/* ================================================== */
.ui-h-xs { height: var(--ui-h-xs);}
.ui-h-sm { height: var(--ui-h-sm);}
.ui-h-md { height: var(--ui-h-md);}
.ui-h-lg { height: var(--ui-h-lg);}
.ui-h-xl { height: var(--ui-h-xl);}


/* Button Demo */
/* ================================================== */
.btn-grid-bin {
  width: 100%;
  max-width: 300px;

  @include bp(sm) {
    max-width: $bp-sm;
  }

  @include bp(lg) {
    max-width: $bp-lg;
  }
}

.btn-grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;

  width: 100%;
  row-gap: var(--4xl);
  column-gap: var(--3xl);

  @include bp(md) {
    column-gap: var(--lg);
  }

  @include bp(lg) {
    column-gap: 0;
  }
}

.btn-col {
  display: grid;
  gap: var(--sm);
  width: min(115px, 200px);
}

.btn-cell {
  display: grid;
  width: 100%;
  height: var(--ui-h-md);
  flex: 2;
  place-items: center start;
}

.btn-cell-label {
  z-index: z(on-card);
  font-family: $font-family-body;
  font-weight: $font-weight-md;
  font-size: var(--text-2xs);
  letter-spacing: $letter-spacing-lg;
  line-height: $line-height-sm;

  color: var(--text-mild);
  text-transform: uppercase;
  text-shadow: var(--text-sha-2xs);

  @include bp(lg) {
    font-size: var(--text-xs);
  }
}

.btn-hover {
  pointer-events: none;

  & > .btn-text {
    color: var(--btn-state-text);
  }

  & > svg {
    background-color: var(--btn-state-icon);
  }

  &::before {
    opacity: var(--btn-hover);
  }
}

.btn-focus {
  pointer-events: none;

  & > .btn-text {
    color: var(--btn-state-text);
  }

  & > svg {
    background-color: var(--btn-state-icon);
  }

  &::before {
    opacity: var(--btn-focus);
  }

  &:focus-visible {
    &::after {
      // @include focus-inner;
      @include focus-visible;
    }
  }
}

.btn-active {
  pointer-events: none;

  & > .btn-text {
    color: var(--btn-state-text);
  }

  & > svg {
    background-color: var(--btn-state-icon);
  }

  &::before {
    opacity: var(--btn-active);
  }
}

/* Demo text styles */
/* ================================================== */
.class-name {
  font-family: $font-family-body;
  font-weight: $font-weight-md;
  letter-spacing: $letter-spacing-lg;
  text-shadow: var(--text-sha-sm);
  word-break: keep-all;
  font-size: var(--text-sm);

  @include bp(sm) {
    font-size: var(--text-md);
  }
}


/* Menu link marquee */
/* ================================================== */
.marquee-bin {
  width: 100%;
  height: fit-content;
  display: flex;
  justify-content: flex-start;
}

.marquee {
  width: fit-content;
  min-width: 50%;
  display: flex;
  justify-content: flex-end;
  padding: var(--sm);
  margin-bottom: var(--3xl);
  background-color: var(--tint-clear);
  border-radius: 0 var(--sm) var(--sm) 0;
  box-shadow: var(--sha-sm);

  @include glass-flat;

  @include bp(xs) {
    min-width: 40%;
  }

  @include bp(sm) {
    min-width: 33%;
  }

  // @include bp(lg) {
  //   min-width: 25%;
  // }

  // @include bp(xl) {
  //   min-width: 33%;
  // }
}

.marquee-title {
  // @include title($font-weight-sm);
  // text-align: start;
  // line-height: 1;
  // color: var(--text-strong);
  // font-size: var(--text-lg);
  // text-shadow: var(--text-sha-xl);
  @include title-2(end);

  // @include bp(lg) {
  //   font-size: var(--text-xl);
  //   text-shadow: var(--text-sha-2xl);
  // }
}

.glass-bevel-xs {
  @include glass-base(
    --bevel-xs,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));
}

.glass-bevel-sm {
  @include glass-base(
    --bevel-sm,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));
}

.glass-bevel-md {
  @include glass-base(
    --bevel-md,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));
}

.glass-bevel-lg {
  @include glass-base(
    --bevel-lg,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));
}

.glass-bevel-xl {
  @include glass-base(
    --bevel-xl,
    $noise-md,
    var(--blur),
    var(--bright),
    var(--satu));
}


// moat demo
.h-200 { min-height: 200px; }


.size-100 { width: min(100%, 100px); aspect-ratio: 1; }
.size-300 { width: min(100%, 300px); aspect-ratio: 1; }
.size-500 { width: min(100%, 500px); aspect-ratio: 1; }
.size-600 { width: min(100%, 600px); aspect-ratio: 1; }
.size-700 { width: min(100%, 700px); aspect-ratio: 1; }
.size-900 { width: min(100%, 900px); aspect-ratio: 1; }

/* Telescope rect glass bevel demo */
/* ================================================== */
.tele-rect {
  display: grid;
  touch-action: pan-y;
  min-width: fit-content;
  width: 100%;
  overflow: hidden;
  padding: 8% 12% 4% 4%;
  // padding: 4% 4% 4% 12%;
  background-color: var(--tint-xdark);

  will-change: padding;
  transition: padding $smooth-cubic $speed-xfast;

  @media (hover: hover) {
    &:hover {
      padding: 8%;
    }
  }

  & > p {
    padding: var(--2xs);
    pointer-events: none;
  }
}


/* 1 to 2 column layout -  tint demo */
/* ================================================== */
.col-1to2 {
  width: 100%;
  gap: var(--sm);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr;

  &:nth-child(1) {
    grid-column: 1/2;
  }

  &:nth-child(2) {
    grid-column: 1/2;
  }

  @include bp(sm) {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
    gap: var(--md);

    &:nth-child(1) {
      grid-column: 1/2;
    }

    &:nth-child(2) {
      grid-column: 2/3;
    }
  }

  @include bp(lg) {
    gap: var(--xl);
  }
}

/* stck 1 - shadows demo */
/* ================================================== */
.stack-1 {
  display: grid;
  place-items: center;
  grid-template-columns: 1fr;
  gap: var(--md);
}

.stack-1-rect {
  min-width: 200px;
  width: min(100%, 300px);
  aspect-ratio : 3 / 1;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: var(--sm);
  border-radius: var(--sm);
}


/* stck 1 to 3 - glass gradients demo */
/* ================================================== */
.stack-1to3 {
  max-width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--lg);
}

.stack-rect-md {
  min-width: fit-content;
  width: min(300px, 100%);

  display: flex;
  justify-content: flex-start;
  align-items: center;
  aspect-ratio : 3 / 1;
  border-radius: var(--md);
  padding: var(--lg);
  box-shadow: var(--sha-md);

  @include bp(sm) {
    max-height: 125px;
    justify-content: center;
    flex: 1;
    padding: var(--2xl);
  }

  @include bp(md) {
    max-height: 150px;
  }
}


/*  glass tint demo */
/* ================================================== */
.glass-bento-2to3 {
  display: grid;
  place-content: center;
  grid-template-columns: repeat(2, minmax(100px, 1fr));
  gap: var(--md);

  @include bp(xs) {
    grid-template-columns: repeat(3, minmax(100px, 180px));
    gap: var(--3xs);
  }

  @include bp(sm) {
    gap: var(--2xs);
  }

  @include bp(md) {
    gap: var(--xs);
  }

  @include bp(lg) {
    grid-template-columns: repeat(3, minmax(100px, 200px));
    gap: var(--sm);
  }
}

/*  Main nav glass logo */
/* ================================================== */
.svg-3d-glass-ui-logo {
  mask: url(/assets/logos/3D-glass-UI-logo.svg);
  @include svg-icon;
  @include glass-filter(10px, 0.8, 2);
}


/*  Hero header */
/* ================================================== */
.hero-card-bin {
  width: 97%;
  min-height: fit-content;
  height: 100%;
  display: grid;
  place-self: center;
  place-items: end start;
  padding-bottom: var(--nav-h);

  @include bp(sm) {
    width: 100%;
    padding-left: min(5%, 3rem);
  }

  @include bp(lg) {
    padding-left: 0;
    max-width: $bp-md;
  }

  @include bp(xl) {
    max-width: $bp-lg;
  }
}

.hero-card {
  @include card-base;
  --space: calc(var(--sm) * 1.1);
  width: 100%;
  border-radius: calc(var(--lg) * 1.15);
  box-shadow: var(--sha-lg);
  padding: var(--space);
        outline: 1px solid transparent;

  @include bp(xs) {
    --space: var(--md);
    width: min(100%, 360px);
  }

  @include bp(sm) {
    width: clamp(360px, 380px, 400px);
  }

  @include bp(md) {
    width: clamp(410px, 430px, 440px);
    --space: calc(var(--md) * 0.95);
  }

  @include bp(lg) {
    width: clamp(440px, 445px, 450px);
    border-radius: calc(var(--lg) * 0.95);
  }
}

.card-3d-bin {
  position: relative;
  width: 97%;
  perspective: 2500px;

  // @media (width > 2400px) {
  //   perspective: 2500px;
  // }
}

.card-3d {
  backface-visibility: hidden;
  will-change: transform;
  transition: transform $speed-2xslow $smooth-cubic;

  transform:
    perspective(2200px)
    rotateY(30deg)
    rotateX(15deg)
    rotateZ(-4deg)
    translateX(10px)
    translateY(-5%);

  @include bp(xs) {
    transform:
      perspective(2500px)
      rotateY(30deg)
      rotateX(20deg)
      rotateZ(-10deg)
      translateX(25px)
      translateY(-12%);
  }

  @include bp(sm) {
    transform:
      perspective(3000px)
      rotateY(25deg)
      rotateX(20deg)
      rotateZ(-10deg)
      translateX(35px)
      translateY(-10%);
  }

  &:hover {
    transform:
      perspective(1000px)
      rotateY(0deg)
      rotateX(0deg)
      rotateZ(0deg)
      translateX(0px)
      translateY(0%);
  }
}

.card-3d-title {
  font-family: $font-family-title;
  font-weight: $font-weight-md;
  letter-spacing: $letter-spacing-sm;
  text-shadow: var(--text-sha-2xl);
  line-height: 1;
  color: var(--text-xstrong);
  font-size: var(--text-lg);

  @include bp(xs) {
    font-size: calc(var(--text-2xl) * 0.9);
  }

  @include bp(sm) {
    font-size: calc(var(--text-2xl) * 0.95);
  }

  @include bp(md) {
    font-size: var(--text-2xl);
  }

  @include bp(lg) {
    font-size: calc(var(--text-2xl) * 0.9);
  }
}

.card-3d-text {
  font-size: var(--text-sm);

  @include bp(md) {
    font-size: var(--text-md);
  }
}