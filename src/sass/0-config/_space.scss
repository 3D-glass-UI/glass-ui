/* ========================================== */
/* Space */
@use "sass:map";
@forward "breakpoint";
@use "breakpoint" as bp;
/* ========================================== */

$bp--sm: map.get(bp.$breakpoints, sm);
$bp--md: map.get(bp.$breakpoints, md);
$bp--lg: map.get(bp.$breakpoints, lg);

/* Responsive UI heights | gutters | max widths */
/* ========================================== */
html {
  --ui--sm: 1.75rem;   /* 28px */
  --ui--md: 2.125rem;  /* 34px */
  --ui--lg: 2.5rem;    /* 40px */

  --max-w--sm: 512px;
  --max-w--md: 800px;
  --max-w--lg: 980px;

  --gutter: 16px;
  --gutterx2: calc(var(--gutter) * 2);

  @include bp.bp(sm) {
    --gutter: clamp(1rem, 1.8vw + 0.5rem, 2.5rem);
  }
}

/* Max width classes */
/* ========================================== */
.max-w--sm {
  width: 100%;
  max-width: var(--max-w--sm);
}

.max-w--md {
  width: 100%;
  max-width: var(--max-w--md);
}

.max-w--lg {
  width: 100%;
  max-width: var(--max-w--lg);
}

/* Gutter classes */
/* ========================================== */
.gutter--all {
  width: calc(100vw - var(--gutterx2));
  margin-left: auto;
  margin-right: auto;
}

.gutter-from--sm {
    width: 100%;
  margin-left: auto;
  margin-right: auto;

  @include bp.bp(sm) {
    min-width: calc($bp--sm - var(--gutterx2));
    width: calc(100% - var(--gutterx2));
  }
}

.gutter-from--md {
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @include bp.bp(md) {
    min-width: calc($bp--sm - var(--gutterx2));
    width: calc(100% - var(--gutterx2));
  }
}

.gutter-from--lg {
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @include bp.bp(lg) {
    min-width: calc($bp--lg - var(--gutterx2));
    max-width: calc(100% - var(--gutterx2));
  }
}